//
// Copyright (c) 2017-2021 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

[[required-apis]]
== Required APIs

MicroProfile implementations must include the following specifications:

 - <<jakartaee-core-profile, Jakarta EE Core Profile 10>>
 - <<mp-config, MicroProfile Config 3.0>>
 - <<mp-fault-tolerance, MicroProfile Fault Tolerance 4.0>>
 - <<mp-health-check, MicroProfile Health 4.0>>
 - <<mp-jwt-auth, MicroProfile JWT Authentication 2.1>>
 - <<mp-open-api, MicroProfile OpenAPI 3.1>>
 - <<mp-rest-client, MicroProfile Rest Client 3.0>>
 - <<mp-telemetry, MicroProfile Telemetry 1.0>>

A MicroProfile compatible implementation must pass *all* required TCKs provided by each MicroProfile specification,
including the Jakarta EE Core Profile 10 TCK.
Passing the MicroProfile optional TCKs is not required.

These APIs and versions guarantee application developers a minimum set of APIs, but they are not intended to be
restrictive.

[[javase]]
=== Java SE

This MicroProfile platform specification requires Java SE 11 for both source and target compatibility. Some component specifications may still support a Java SE 8 minimum version when used standalone. MicroProfile
implementations that support the MicroProfile platform specification can provide support Java SE 11 or higher.

[[jakartaee-core-profile]]
=== Jakarta EE Core Profile 10

MicroProfile 6.0 and above requires https://jakarta.ee/specifications/coreprofile/10/[Jakarta EE 10 Core Profile] support.

* Jakarta Annotations 2.1
* Jakarta Contexts and Dependency Injection (Lite Section) 4.0**
* Jakarta Dependency Injection 2.0
* Jakarta Interceptors 2.1
* Jakarta JSON Binding 3.0
* Jakarta JSON Processing 2.1
* Jakarta RESTful Web Services 3.1

pass:[**] Full CDI support is not required. CDI SE support is not required.

[[mp-config]]
=== MicroProfile Config 3.0

MicroProfile Config provides applications and microservices means to obtain configuration properties through several environment-aware sources both internal and external to the application and made available through dependency injection or lookup.

 - http://microprofile.io/project/eclipse/microprofile-config
 - https://github.com/eclipse/microprofile-config/releases/tag/3.0.2

[[mp-fault-tolerance]]
=== MicroProfile Fault Tolerance 4.0

MicroProfile Fault Tolerance provides the ability to separate execution logic from business logic.
Key aspects of the API include TimeOut, RetryPolicy, Fallback, Bulkhead, and Circuit Breaker processing.
Fault Tolerance 3.0 is now dependent on Jakarta EE 8 technologies.

 - http://microprofile.io/project/eclipse/microprofile-fault-tolerance
 - https://github.com/eclipse/microprofile-fault-tolerance/releases/tag/4.0.2

[[mp-health-check]]
=== MicroProfile Health 4.0

MicroProfile Health provides the ability to expose the health of an application
to the underlying platform (ex: Kubernetes)

 - http://microprofile.io/project/eclipse/microprofile-health
 - https://github.com/eclipse/microprofile-health/releases/tag/4.0.1

[[mp-jwt-auth]]
=== MicroProfile JWT Authentication 2.1

MicroProfile JWT Authentication provides role based access control (RBAC) microservice endpoints using OpenID Connect (OIDC) and JSON Web Tokens (JWT).

 - http://microprofile.io/project/eclipse/microprofile-jwt-auth
 - https://github.com/eclipse/microprofile-jwt-auth/releases/tag/2.1

[[mp-open-api]]
=== MicroProfile OpenAPI 3.1

MicroProfile OpenAPI provides a unified Java API for the https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md[OpenAPI v3 specification] that all application developers can use to expose their API documentation.

 - http://microprofile.io/project/eclipse/microprofile-open-api
 - https://github.com/eclipse/microprofile-open-api/releases/tag/3.1

[[mp-telemetry]]
=== MicroProfile Telemetry 1.0

MicroProfile Telemetry
Telemetry data is needed to power observability products.

Traditionally, telemetry data has been provided by either open-source projects or commercial vendors. With a lack of standardization, the net result is the lack of data portability and the burden on the user to maintain the instrumentation.

The OpenTelemetry project solves these problems by providing a single, vendor-agnostic solution.

 - http://microprofile.io/project/eclipse/microprofile-telemetry
 - https://github.com/eclipse/microprofile-telemetry/releases/tag/1.0

[[mp-rest-client]]
=== MicroProfile Rest Client 3.0

MicroProfile Rest Client provides a type-safe approach to invoke RESTful services over HTTP. As much as possible MicroProfile Rest Client attempts to use https://eclipse-ee4j.github.io/jaxrs-api/[Jakarta RESTful Web Services APIs] for consistency and easier re-use.

- http://microprofile.io/project/eclipse/microprofile-rest-client
- https://github.com/eclipse/microprofile-rest-client/releases/tag/3.0.1
